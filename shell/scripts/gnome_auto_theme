#!/usr/bin/env bash
#
# Bash script to switch gnome theme between light and dark mode

# Global constants
readonly GSETTINGS="/usr/bin/gsettings"
readonly GNOME_THEME_SCHEMA="org.gnome.desktop.interface"
readonly GNOME_THEME_KEY="color-scheme"
readonly GNOME_LEGACY_THEME_KEY="gtk-theme"

##########################
# Print usage for help
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   Writes usage to stdout
##########################
function print_help()
{
    echo "Usage: $(basename -- "$0") [-s {light, dark}]"
    echo "Switches gnome theme"
    echo
    echo "-h, --help    prints this message"
    echo "-s, --set     set theme to light/dark"
}

##############################################
# Switch to passed theme
# Globals:
#   GSETTINGS, GNOME_THEME, GNOME_LEGACY_THEME
# Arguments:
#   theme
# Outputs:
##############################################
function set_theme()
{
    # Original bash commands
    #gsettings set org.gnome.desktop.interface color-scheme 'default'
    #gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita'
    #gsettings set org.gnome.desktop.interface color-scheme 'prefer-dark'
    #gsettings set org.gnome.desktop.interface gtk-theme 'Adwaita-dark'
    local -r mode=$1; shift
    case "${mode}" in
        "light")
            local -r theme="default"
            local -r legacy_theme="Adwaita"
            ;;
        "dark")
            local -r theme="prefer-dark"
            local -r legacy_theme="Adwaita-dark"
            ;;
        *)
            echo "Unsupported mode"
            print_help
            return 1
    esac
    echo "Switching to ${mode} theme"
    "${GSETTINGS}" set "${GNOME_THEME_SCHEMA}" "${GNOME_THEME_KEY}" "${theme}"
    "${GSETTINGS}" set "${GNOME_THEME_SCHEMA}" "${GNOME_LEGACY_THEME_KEY}" "${legacy_theme}"
}

##############################################
# Get current theme
# Globals:
#   GSETTINGS, GNOME_THEME, GNOME_LEGACY_THEME
# Arguments:
#   None
# Outputs:
#   Writes current theme to stdout
##############################################
function get_theme()
{
    local -r current_theme="$("${GSETTINGS}" get "${GNOME_THEME_SCHEMA}" "${GNOME_THEME_KEY}")"
    local -r current_legacy_theme="$("${GSETTINGS}" get "${GNOME_THEME_SCHEMA}" ${GNOME_LEGACY_THEME_KEY})"

    echo "Theme: ${current_theme}"
    echo "Legacy Theme: ${current_legacy_theme}"
}

while [[ $# -gt 0 ]]; do
    case $1 in 
        -h|--help)
            print_help
            exit
            ;;
        -s|--set)
            THEME="$2"
            shift 2
            ;;
        -*)
            echo "Unknown option $1"
            print_help
            exit 1
            ;;
        *)
            # Ignore positional args
            shift
            ;;
    esac
done

if [[ -z "${THEME}" ]]; then
    get_theme
else
    set_theme "${THEME}"
fi
